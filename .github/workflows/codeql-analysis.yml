# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.

name: "CodeQL Analysis"

on:
  push:
    paths-ignore:
      - ".github/**"
      - "*.md"
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - ".github/**"
      - "*.md"
  schedule:
    - cron: "35 13 * * 2"
  workflow_dispatch:

concurrency: 
  group: scan-group-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Workflow Trigger Event
        run: echo This workflow was triggered by a $GITHUB_EVENT_NAME

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL for security-and-quality scan
        if: ${{ github.event_name != 'pull_request'}}
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          queries: security-and-quality

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL for Pull Request
        if: ${{ github.event_name == 'pull_request'}}
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          #queries: security-extended

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
      - name: Upload CodeQL Sarif
        uses: actions/upload-artifact@v2
        with:
          name: sarif-files
          path: /home/runner/work/f1tv-dl/results/*.sarif

    #- name: Debug Analysis
    #  uses: zbazztian/codeql-debug@master
    #  with:
    #    language: ${{ matrix.language }}

    #- name: Upload loc as a Build Artifact
    #  uses: actions/upload-artifact@v2.2.0
    #  with:
    #    name: codeql-debug-results
    #    path: codeql-debug-results
    #    retention-days: 30

    # Before uploading the database as an artifact,
    # clean up its temporary data to reduce the artifact size,
    # and zip it so the artifact is a single file.
    # This reduces the load on the Actions artifact file database.
#    - name: Clean up CodeQL database before upload
#      id: database-cleanup
#      env:
#        LANGUAGE: ${{ matrix.language }}
#      run: |
#          set -xu
#          DATABASE_DIR="/home/runner/work/_temp/codeql_databases/$LANGUAGE"
#          echo "Cleaning up database in $DATABASE_DIR"
#          for SUB_DIR in log results working; do
#            rm -rf $DATABASE_DIR/$SUB_DIR
#          done
#          echo "Zipping database"
#          DATABASE_ZIP="semmle-code-$LANGUAGE-db.zip"
#          zip -r "$DATABASE_ZIP" "$DATABASE_DIR"
#          echo "::set-output name=zip::$DATABASE_ZIP"
#    - name: Upload CodeQL database
#      uses: actions/upload-artifact@v2
#      with:
#        name: semmle-code-${{ matrix.language }}-db
#        path: ${{ steps.database-cleanup.outputs.zip }}

