# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test Versioning Workflow

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "npm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=<prerelease-id>] | from-git]"
        required: true
        default: "patch"

jobs:
  test-versioning:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        node-version: ["14"]
        
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run npm version ${{ github.event.inputs.version_type }}
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version

      - name: Read package.json
        id: read-package-json
        run: |
          content=`cat ./package.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=package-json::$content"

      - name: Set version
        id: semver
        run: |
          echo "::set-output name=semver::${{fromJson(steps.read-package-json.outputs.package-json).version}}"

      - name: New version is ${{ steps.semver.outputs.semver }}
        run: echo "New version is ${{ steps.semver.outputs.semver }}"
