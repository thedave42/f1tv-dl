# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Docker Build and Source Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "npm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=<prerelease-id>] | from-git]"
        required: true
        default: "patch"
      release_description:
        description: "Release notes"
        required: true
        default: "enter release notes"

jobs:
  update-version-info:
    name: Executing npm version ${{ github.event.inputs.version_type }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    outputs:
      semver: ${{ steps.semver.outputs.semver }}
      sha: ${{ steps.commit.outputs.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ vars.NODE_VERSION }} environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Update version information
        id: semver
        run: |
          echo "semver=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)" >> $GITHUB_OUTPUT

      - name: New version is ${{ steps.semver.outputs.semver }}
        run: echo "New version is ${{ steps.semver.outputs.semver }}"

      - name: Commit new version information
        run: |
          git config user.name github-actions
          git config user.email dave@digitalnoise.net
          git add .
          git commit -m "Updated to release version ${{ steps.semver.outputs.semver }}"
          git push

      - name: Get new commit sha
        id: commit
        run: |
           echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Updated version ${{ steps.semver.outputs.semver }}, new sha ${{ steps.commit.outputs.sha }}
        run: |
          echo "::debug::Updated version ${{ steps.semver.outputs.semver }}, new sha ${{ steps.commit.outputs.sha }}"


  build-and-publish-docker:
    name: Create docker image
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    needs: update-version-info

    steps:
      - name: Checkout code
        uses:  actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.update-version-info.outputs.sha }}

      - name: Creating docker image version ${{ needs.update-version-info.outputs.semver }}
        run: echo "Creating docker image version ${{ needs.update-version-info.outputs.semver }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.5.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:latest
            ghcr.io/${{ github.repository_owner }}/f1tv-dl-docker:${{ needs.update-version-info.outputs.semver }}

  create-release:
    name: Creating GitHub release
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    needs: 
      - update-version-info

    steps:
      - name: Checkout code
        uses:  actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.update-version-info.outputs.sha }}

      - name: Creating release version ${{ needs.update-version-info.outputs.semver }}
        run: echo "Creating release version ${{ needs.update-version-info.outputs.semver }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.update-version-info.outputs.semver }}
          release_name: fltv-dl ${{ needs.update-version-info.outputs.semver }}
          body: ${{ github.event.inputs.release_description }}
          draft: false
          prerelease: false

  npm-publish:
    name: Publish npm release
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    needs: 
      - update-version-info

    steps:
      - name: Checkout code
        uses:  actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ needs.update-version-info.outputs.sha }}

      - name: Set up Node.js ${{ vars.NODE_VERSION }} environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Publishing version ${{ needs.update-version-info.outputs.semver }} to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"
          dry-run: false

  finalze:
      name: Finalize release
      runs-on: ubuntu-20.04
      defaults:
        run:
          shell: bash
      needs: 
        - update-version-info
        - create-release
        - build-and-publish-docker
        - npm-publish

      steps:
        - name: Everything successfully published
          if: ${{ success() }}
          run: |
            echo "::debug::Everything successfully published"

        - name: Something went wrong
          if: ${{ failure() }}
          run: |
            echo "::debug::Something went wrong"

